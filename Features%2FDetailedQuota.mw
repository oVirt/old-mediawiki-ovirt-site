{{autolang|base=yes}}

<!-- The actual name of your feature page should look something like: Features/YourFeatureName.  This keeps all features in the same namespace -->
= Quota =

== Summary ==
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
Quota provides a way for the Administrator to limit the resource usage in the System.<BR>

== Owner ==
<!--This should link to your home wiki page so we know who you are-->
* Feature owner: [[User:mlipchuk| Maor Lipchuk]]
:* GUI Component owner: [[User:gchaplik| Gilad Chaplik]]
:* REST Component owner: [[User:mpasternak| Michael Pasternak]]
:* Engine Component owner: [[User:mlipchuk| Maor Lipchuk]]
:* QA Owner: [[User:ykaul| Yaniv Kaul]] 

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: mlipchuk@redhat.com

== Current status ==
* Target Release: 
* Status: Design Stage
* Last updated date: Wed November 10 2011


== Detailed Description ==
<!-- Provide the details of the feature. What is it going to include. See the sections below. -->
<!-- New entities and changes in existing entities. -->
Today, when consuming resources from the Data Center, such as storage (when creating a new virtual disk) and virtual CPUs/RAM (when running VMs),
the user is only limited by the available resources. Thus, there is no way to limit the resources that can be used by a user. This limitation is problematic, especially in multi-tenant environments.

Quota provides the administrator a mechanism for managing resources allocation for users and groups in the Data Center.<BR>
This mechanism allows the administrator to manage, share and monitor the resources in the Data Center.

=== Entity Description ===

==== Quota ====
<!-- New entities and changes in existing entities. -->
Quota is a new (searchable) object in the system, which contains the following properties:
# Name
# Description
# Data Center, for which the quota applies.
# List of unlimited number of rules, where each rule should specify a resource and resource limitation parameters.
# List of Users/Groups that have permission to use the Quota, i.e. assign it to VMs/disks


For example, the following Quota configuration, is for R&D team:
# Name: DevelQuota
# Description: Quota configured for R&D team
# Data Center: Devel_Data_Center
# Resource limitations:
#* VCPU/Memory limitations:
#** Cluster1: 6 VCPUs, 9GB RAM
#** Cluster2: 8 VCPUs, 12GB RAM
#*Storage Limitations:
#** Storage Domain1: 20GB
#** Storage Domain1: 10GB
#** Storage Domain3: 50GB
#List of Users/Groups:
#* developers
#* team_leaders
#* new_developer


The limitation on a resource can be specified either on a specific resource (see example above) or globally.<BR>
The global resource defines limitation on the Data Center for a specific type of resource (storage or runtime).<BR>


For example the following limitations represent global limitation on the Cluster and the Storage:
* Global Cluster: 14 VCPUs, 21GB RAM
* Global Storage: 80GB


A Quota limitation can be also set to unlimited (both globally, or on a specific resource).<BR>
The following Quota is an example of unlimited quota on both global and specific resources:
* Global Cluster: Unlimited
* Storage Domain1: Unlimited
* Storage Domain2: 50GB
* Storage Domain3: Unlimited

==== Data Center ====
The Quota object is in the data center scope. Also, a Data Center must be related to at least one Quota object.<BR>
Each Data Center entity is configured with one of the following operation modes:
# Disable - The Data Center would not be subject to Quota restrictions.
# Audit - Only warning messages would be issued when Quota restrictions are violated.
# Enforce - Enforced the restrictions completely and prevent the resource allocation.

=== CRUD ===
<!-- Describe the create/read/update/delete operations on the entities, and what each operation should do. -->
* Quota object can be removed only if there are no entities such as VM or Template that are referencing it.
* Quota object can be edited; When a Quota is edited, the change should apply to all the entities that are assigned to this Quota, but only for future allocations of resources.<BR>
Quota object parameters modifications can result in exceeding the resource limitations:
:* reducing the disk limitation of some storage domain
:* reducing CPU/RAM limitation
:* removing a user from the list of users permitted to use the quota
:All the above will not cause a resource deallocation. However, users will not be able to exceed the Quota limitations again after the resources are released.
:Also, if a user was removed from the list of permitted users it won't result in an immediate interruptive action. However, that user won't be able to use this quota again, unless permitted to.

=== User Experience ===
<!-- Describe user experience related issues. For example: We need a wizard for ...., the behaviour is different in the UI because ....., etc. -->
<!-- GUI mockups should also be added here to make it more clear -->
* The Administrator will be able to create/edit a Quota using a wizard.<BR>The wizard should allow administrators to configure Cluster Quota parameters, storage Quota parameters, and assign users which will be able to consume the Quota resources.
* For supporting definition of Quota per user, the Quota can be cloned.<BR>Such a clone procedure should copy all the Quota properties except of the name and the description.
* Users assigned to the Quota would need a power user permission on the consumable resources (for example when add/edit a VM). The wizard should enable automatic addition of these permissions.<BR>However, no permissions will be removed when removing resources from the Quota, but an alert message will be presented as follow: <BR>
 ''Attention, Quota ${QuotaName} resources have been changed. If needed, update relevant permissions accordingly''.
* Note, that the user who created the Quota object would not necessarily have permissions, to consume from it.<BR>Administrator should also have an aggregated view of defined Quotas vs actual storage space used/free.

The following UI mockups contain guidelines for the different screens and wizards:

[[File:dc.png]]

[[File:new_quota_on_clusters_add.png]]

[[File:new_quotaon_clusters.png]]

[[File:new_quotaon_clusters_statistics.png]]

[[File:new_quotaon_dc.png]]

[[File:new_quotaon_dcadd.png]]

[[File:quota.png]]

[[File:statistic.png]]

[[File:users.png]]

=== Installation/Upgrade ===
<!-- Describe how the feature will effect new installation or existing one. -->
* Upon upgrade or new installation, each Data Center should be assigned with an unlimited Quota.
* For each Data Center, all objects (disks and VM's) in the DC will be assigned to the unlimited Quota, and all the users in the setup will be permitted to use it.
* The new/upgraded Data Center, will be set with disabled mode by default (which means it won't be subjected to the quota restrictions).
* When the administrator choose to use the Quota mechanism, he should change the Data Center Quota mode to audit or enforce.
* After the administrator configure new quotas for the DC, he should remove permissions from the unlimited quota to avoid users consuming resources for it.

=== User work-flows ===
<!-- Describe the high-level work-flows relevant to this feature. -->
The Administrator Portal should allow the following operations:
* View/edit/create Quota's
* View/edit/create the User's roles and Quotas
* View Quota per resource (User/Storage domain etc.)


The Power User Portal should allow the following operations:
* View Quota's defined/used for himself
* Use Quota upon resource usage (runtime and storage)

=== Enforcement ===
* Quota runtime limitation should be enforced during VM execution.
* Quota storage limitation should be enforced upon any requirement for storage allocation.
* When dealing with QCOW disks (which is not pre-allocated, like templates or stateless VM) the Quota should consume the total maximum size of the disk, since it is the potential size that can be used.
* In the future Quota should also have enforcement for network usage and storage throughput.

=== Notification ===
* Quota will have a threshold configured to alert when the Quota is about to be full.
:* The threshold will be configured for the administrator and for the User. The default value for administrators is 60%, and for regular users is 75%.
:* When Quota reaches the threshold limit, an audit log notification should be performed to the Administrator or the User.
:* User audit log should be: 
 ''Usage on resource $(Resource) in Quota $(Quota_Name) has reached the configured threshold ${Threshold_User_Percentage}. Please contact your system administrator.''
:* Administrator audit log should be:
 ''Usage on resource $(Resource) in Quota $(Quota_Name) has reached the configured threshold ${Threshold_Admin_Percentage}.''
* Quota will also have a configurable grace percentage, for the user to have a chance to consume resources even if the Quota has exceeded the limit.
:* The configured default grace should be 20% of the Quota resources limitations.
:* When user starts to use the grace percentage, a notification event should be triggered both to the administrator, and the user which exceeded this limit.
:* When Quota reaches its resources limit, it will be able to consume resources depending on the grace percentage configured in it.
:* An audit log warning message should be performed to the User and the administrator, as follows:
 ''Usage on resource $(Resource) in Quota $(Quota_Name) has reached its limit due to an action made by user ${UserName}.''

=== Events ===
The Administrator, will be able to set an email event, when Quota resources exceeded their limit.

== Dependencies / Related Features and Projects ==
<!-- What other packages (RPMs) depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? Add a link to the feature description for relevant features. -->
* Quota is not depended on outside features, and should be managed only in the engine core scope.
* When handling plug/unplug disks or attach/detach disks, the entity will still consume resources from its configured original Quota it was created on.

Affected oVirt projects:
* API
* CLI
* Engine-core
* Webadmin
* User Portal

== Documentation / External references ==
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->
http://www.ovirt.org/wiki/Features/Quota

== Comments and Discussion ==
http://www.ovirt.org/wiki/Talk:Features/Quota

== Open Issues ==
<!-- Issues that we haven't decided how to take care of yet. These are issues that we need to resolve and change this document accordingly. -->
* There should be a new business entity which will represent a group of storage domains as one unit.<BR>The new business entity will be named, Virtual Storage Group, and should be referenced in the quota as a business entity and have storage restrictions on it.
* Enforcement of network usage and storage throughput using the Quota entity.
* Add historic Quota utilization to history database.
[[Category: Feature]]
