== oVirt Node Dbus Backend <!-- The name of your feature --> ==

{{Feature|name=Dbus Backend |modules=node|version=3.6|status=In Progress}}
[[Category:Feature]]
[[Category:Node]]

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
This features adds a Dbus configuration backend for oVirt Node.

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
* Name: [[User:rbarry| Ryan Barry]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: rbarry AT redhat DOT com
* IRC:  rbarry

=== Detailed Description ===
<!-- Expand on the summary, if appropriate.  A couple sentences suffices to explain the goal, but the more details you can provide the better. -->
Th main reason for this change it to adopt a common used UI for the oVirt Node.  <br/>
The use of Dbus will provide control of oVirt Node in manner that is familiar to many developers out of the oVirt community. <br/>
Lastly, we can utilize common platform code and reduce the amount of duplicated work.

The Dbus provider will run as a separate service not tied to invocation of the TUI.

=== Benefit to oVirt ===
<!-- What is the benefit to the oVirt project?  If this is a major capability update, what has changed?  If this is a new feature, what capabilities does it bring? Why will oVirt become a better distribution or project because of this feature?-->
Moving further away from tight coupling with the TUI and onto Dbus allows easy access to the configuration API from any frontend or language that has Dbus bindings.
Additionally, moving towards Dbus means less logical separation when we start using Dbus interfaces not provided by Node.

=== Dependencies / Related Features ===
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? -->
Having a usable Dbus backend makes integration with [[Features/Node/Cockpit | Cockpit]] much better.

=== Testing ===
Classes from ovirt.node.config.defaults should be visible on the Dbus System Bus
Activation of methods with dbus-send or python-dbus will work, and trigger the appropriate backend classes.

Install the ovirt-node-dbus-backend RPM (can be built by cloning the git repo followed by "./autogen.sh && make rpm") on a target system which has ovirt-node installed. Or ovirt-node-lib-config, after packages are broken out.

You can also copy the ovirt-node python sources into /usr/lib/python2.7/site-packages and install the dependencies manually:
<pre>git clone gerrit.ovirt.org:ovirt-node
cd ovirt-node/src/ && scp -rpv ovirt* root@test:/usr/lib/python2.7/site-packages/
ssh root@test 'yum -y install python-urwid python-augeas wget bridge-utils iscsi-initiator-utils newt-python PyPAM python-lxml python-lockfile python-gudev cracklib-python tuned</pre>

<pre>yum -y localinstall /path/to/ovirt-node-dbus-backend*.rpm && service node-dbus start</pre>

Check the journal to see that it's started properly. It'll loop over ovirt.node.config.defaults and export methods as /org/ovirt/node/${class}, with methods available at "org.ovirt.node.${method}". These are printed out in the journal.

If you want, you can start the service in the foreground instead of with systemd.
<pre>python /usr/lib/python2.?/site-packages/ovirt/node/dbus/service.py -d --debug</pre>

These can be tested trivially from python. For example:
<pre>bus = dbus.SystemBus()
obj = bus.get_object(BUS_NAME, "/org/ovirt/node/NFSv4")
service = dbus.Interface(obj, "org.ovirt.node")
print service.configure_domain("some.tld")</pre>

Or from the console:
<pre>dbus-send --system --print-reply --type=method_call --dest=org.ovirt.node /org/ovirt/node/NFSv4 org.ovirt.node.configure_domain string:"some.tld"</pre>

Append "--test" if you want to use test classes, which can be directly tested with:
<pre>python /usr/lib/python2.?/site-packages/ovirt/node/dbus/service.py -c --test</pre>

The test package approximates both a bare class of a style which doesn't currently exist, and a wrapped class which requires Node transactions to be run.

=== Documentation / External references ===
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->
https://bugzilla.redhat.com/show_bug.cgi?id=1191962

=== Comments and Discussion ===

Comments and discussion can be posted on mailinglist or the referenced bug.
