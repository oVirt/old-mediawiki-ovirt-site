=Import Storage Domain =

{{Feature|name=Import Storage Domain|modules=storage|version=|status=Design}}

== Summary ==
Today, oVirt is able to import ISO and Export Storage Domains, however, there is no support for importing an existing Data Storage Domain.<BR/>
Each Data Storage Domain is an entity which contains disks and sometime VM's and Template's OVF.<BR/>
The OVF is an XML standard representing the VM/Template configuration, including disks, memory, CPU and more.<BR/>
Based on this information stored in the Storage Domain, we can relate the disks, VMs and Templates to any Data Center which we will relate the Storage Domain to.<BR/>
<BR/>
The usability of the feature might be useful for various use cases, the following are some of them: 
* Recover after the loss of the oVirt Engine's database.
* Transfer VMs between setups without the need to copy the data into and out of the export domain.
* Support migrating Storage Domains between DCs and between different oVirt installations.

== Owner ==
* Maor Lipchuk mlipchuk@redhat.com 

== Current status ==
* Design

== General Functionality ==
* The VMs'/Templates' OVFs will be imported from the OVF disk in the Storage Domain [see 1], the OvfOnWantedDomains feature, will be supported from oVirt 3.5.<BR/>
* Imported domains will be imported as 'unattached' and can then be attached to a DC.
* If the OVF disk [see 1] will not be in the Storage Domain, then the only entities that will be imported are the disks in the Storage Domain (An appropriate event log will be notify it to the user).

[1] http://www.ovirt.org/Feature/OvfOnWantedDomains

====  Phase 1 - Detach/Attach Storage Domain with VMs/Templates====
Today we can detach a Storage Domain from the DC, only if it is empty, i.e. does not contain any disks or VMs/Templates<BR/>
As part of Import Storage Domain feature, oVirt will add the ability for the  user to detach a Storage Domain containing VMs/Templates and Disks, and re-attach it again to another Data Center.<BR/>
As part of phase 1, if the Storage Domain contains VMs or Tempaltes which contain disks on multiple Storage Domains the operation will fail and the following event will be presented to the user:<BR/>
* Cannot detach {Storage Domain Name}. The following VMs/Templates have disks that reside on other storage domains: {vm names}. Please either detach those disks or move them to the storage domain.
<BR/>
Shareable and direct lun disks are not supported in the OVF file today, hence if a VM includes a shareable or direct lun disks a warning will be prompt for the user, indicating the following:<BR/>
* Attention, The following VMs contains shareable/direct lun disks which will not be part of the VM configuration after the detach will take place: {vmNames}.
<BR/>
Only VMs'/Templates' OVF will be part of the Data Center on attach operation, for now there is a gap that VMs/Templates with no disks does not exists in the Storage Domain's OVF, therefore those VMs will not be present in the setup on attach operation.<BR/><BR/>
Open Issue: On detach of Storage Domain the VMs/Templates related to the Storage Domain should not be present in the engine, but will still be part of the OVF disk in the Storage Domain.<BR/>
On attach the user should assign those VMs/Templates the appropriate clusters before the user will start to use them.

==== Phase 2 - Import NFS Storage Domain ====
* When importing a Storage Domain with OVF files referencing disks on additional Storage Domains which do not currently exist in the system, the system will automatically add a reference to these Storage Domains in the DC and denote them as unavailable. {DOMAIN_UUID}_unavailable
* The unavailable Storage Domains will behave the same as a Storage Domain in maintenance status. The disks related to these Storage Domains (Which are related to the VMs) will be shown as disabled in the GUI and will be inactive (unplugged).
* The user will not be able to remove disks related to the dummy Storage Domain, he/she can only detach the disk from a VM and attach it to another VM.
* When the user will decide to import a Storage Domain to the setup, which already has disks related to this Storage Domain, the engine will verify if the target Data Center is the same as the Data Center where the unavailable Storage Domain exists, the engine will run over the properties of the Storage Domain configuration  (Name, path ext.) and will change the configuration properly. If the Data Center does not match the Data Center of the unavailable Storage Domain, the user will be prompt with a can do action message that there is already reference of this Storage Domain in another Data Center, and the user should import it to the right Data Center.
* The user can decide that he/she does not want any relation to the unavailable Storage Domain's disks, in his/her setup, and can simply remove the unavailable Storage Domain and all its disks references.
* The disks imported from the imported Storage Domain will be the same as in the VM's OVF, which means plugged/unplugged to the VM. If the user will try to run a VM which contains disks on the unavailable Storage Domain, the behaviour should be the same as if the disks were on a Storage Domain in maintenance status. The operation should be blocked until the user will update the disks to be unplugged on the VM.
* A Template Disk might reside on multiple Storage Domains. The OVF of the template should not contain any reference to the copies of the disks, so there will be no references of copied disks when importing a Storage Domain. Once a Storage Domain will be imported which have the same UUID for an existing template disk, an appropriate event log will notify this to the user, and the user can copy the disks to whichever Storage  Domains he or she pleases.
* When importing a Storage Domain the user needs to take care not to import a Storage Domain which is in use by another oVirt setup to avoid data corruption. The system will prompt the user with a warning message before each import of Storage Domain with Meta Data that indicates it is already attached to a Storage Pool.
* The OVF configurations of VMs could be different on multiple Storage Domains. Once a Storage Domain will be Imported the VM that will be created from it will keep the same configuration as in the OVF, if another Storage Domain will be imported with the same VM, the configuration of the existing VM will  not be changed and will stay as it is in the setup, to avoid running over changes the user has done to the VM.


===== GUI Perspective =====
* The user flow for importing an NFS Storage Domain, will be similar to importing Export/ISO domain.<BR/>
The user will enter the path of the storage domain and will start the import process.<BR/>
* Unrelated disks will be disabled in the GUI

The following UI mockups contain guidelines for the different screens and wizards related for file Storage Domains:<BR/>
An import screen for NFS Storage Domain :<BR/>
<BR/>
[[File:ImportNFS.jpeg|600px]]
<BR/><BR/><BR/><BR/>
An import screen for POSIX Storage Domain :<BR/>
<BR/>
[[File:ImportPosix.jpeg|600px]]
<BR/><BR/><BR/><BR/>
An import screen for Gluster Storage Domain :<BR/>
<BR/>
[[File:ImportGluster.jpeg|600px]]

===== DB Changes =====
We will add a new column in the storage domains table which will be called isStorageExists.<BR/>
When this field is false then all the images related to it will be disabled in the GUI.

==== Phase 3 - Import block device Storage Domain ====
On import a Block Device Storage Domain,<BR/>
The user will need to input a Storage Server name or IP, the engine will then connect to all the LUNs in the Storage Server and will group by their VGs.<BR/>
Each VG represents a Storage Domain in the engine.<BR/>
Eventually the engine should have a map of maps.<BR/>
The first map will link between VG and targets. each target is also a map which link between the target and its LUNs.<BR/>
Open Issue: We should have an indication of External LUN disk on the Lun<BR/>

===== GUI Perspective =====
* Once the user will decide to import a Block Device Domain, it will use a similar dialog as adding iSCSI/FC Storage Domain. The user will use the Storage Server name or IP as an input, and the Host chosen will  connect to the Storage Server a display the targets on it.
* Once the user will check the targets he will want to connect and press the login button,  the user should see a list of Storage Domains names and sizes, related to those targets chosen. Each Storage Target will have a tool tip once standing on it, it will present a list of LUN GUIDs related to it.
* Once the user selects a storage domain to import, he will press the Import button, and the engine will read the VM OVFs from it (see: OVF on any domain feature), and the disks that reside on the Domain. From there on, the behaviour should be the same as importing from NFS as described in phase 2.

The following UI mockups contain guidelines for the different screens and wizards related to the block domain:<BR/>
An import screen for Fibre Channel Storage Domain :<BR/>
<BR/>
[[File:FibreChannel.png|600px]]
<BR/><BR/><BR/><BR/>
An import screen for iSCSI Storage Domain :<BR/>
<BR/>
[[File:Iscsi.jpeg|600px]]

=== Permissions ===
* No additional permissions will be added.
* The role for importing a Storage Domain should be CREATE_STORAGE_DOMAIN
Open issue: Could be also that CREATE_VM for creating VMs.

=== Future Work ===
* Detach Stroage Domain with VMs/Templates and disks: The user will be able to detach a list of Storage Domains all at once instead detaching each Storage Domain one by one.
* Import Storage Domain :  The user will be able to import a list of Storage domains all at once.
* Adding validation for checking image corruption after importing the Storage Domain. - Mainly  for sync issues with the OVF.
* Import an Export Domain as a regular Storage Domain

=== Related Features ===
* OVF on any domain
* Quota - The user might import disks which will extend a defined Quota in DC.
This scenario is similar to when a user enforce a quota though it already been extended.
The default behaviour will treat that by letting the user still use the resources though he/she will not be able to create any more disks.
* Local Storage Domain - Should be the same behaviour as any other NFS Storage Domain.
* Gluster
* PosixFs

=== Comments and Discussion ===
* Refer to [[Talk: ImportStorageDomain ]]
