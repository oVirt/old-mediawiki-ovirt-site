'''Goal: create a cronjob that sends a tar backup of Gerrit.'''

== On linode01.ovirt.org ==

* Create Gerrit backup user; save password in ''/root/passwords'':
<pre>
useradd gerrit-backup
passwd gerrit-backup
</pre>
* Create SSH key structure:
<pre>
touch /home/gerrit-backup/.ssh/authorized_keys
vi /home/gerrit-backup/.ssh/authorized_keys # add id_rsa.pub contents
chmod 644 /home/gerrit-backup/.ssh/authorized_keys 
chmod 700 /home/gerrit-backup/.ssh/
</pre>
* Create backup directory and sub-dir tree:
<pre>
mkdir -p /home/gerrit-backup/backup/src
</pre>

== On gerrit.ovirt.org ==

* Switch to the Gerrit user:
<pre>
su - gerrit2
</pre>
* Create an SSH key without a passphrase, then copy the public key for the ''authorized_keys'' file on the remote host:
<pre>
ssh-keygen # set no passphrase
cat .ssh/id_rsa.pub
</pre>
* Prepare backup script:
<pre>
mkdir /home/gerrit2/bin
vi bin/gerrit-backup.sh
</pre>
* Bash script to remotely backup git repository directories using rsync over ssh:
<pre>
#!/bin/bash
#
# Gerrit backup script: 0.1 Alpha
#
# 20111207 Karsten Wade <kwade@redhat.com> <quaid@iquaid.org>

# Set variables
RSYNC="/usr/bin/rsync"
RSYNCOPTS="-az -e"
SSH="/usr/bin/ssh"
GITSRC="/usr/local/src/git/"
REMOTEUSER="gerrit-backup"
REMOTEURL="ovirt.org"
REMOTEDIR="gerrit.ovirt.org-src-backup/src/"

# Run backup - rsync local git source to remote backup directory
# Note: gerrit user has sshkeys with no passphrase
$RSYNC $RSYNCOPTS $SSH $GITSRC $REMOTEUSER@$REMOTEURL:$REMOTEDIR
</pre>
* Make script executable:
<pre>
chmod 700 bin/gerrit-backup.sh
</pre>
* Make cronjob run every day at 2200 EST
<pre>
crontab -e
</pre>
* Contents of user's ''crontab'':
<pre>
# mail all output to root
MAILTO=root
# Run at 2200 (10 pm) system time every day
0 22 * * *     $HOME/bin/gerrit-backup.sh
</pre>

[[Category:Infrastructure documentation]]
