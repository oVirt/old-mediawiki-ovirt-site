<!-- {{autolang|base=yes}} -->

== Read Only Disk <!-- The name of your feature --> ==

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
VDSM already has a read-only disk capability. This feature  adds that functionality to the engine as well.

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
* Name: [[User:vvolansk|Vered Volansky]]
* Email: vered@redhat.com

=== Current status ===
* Target Release: 3.3
* Status: work in progress
* Last updated: {{CURRENTMONTHNAME}} {{CURRENTDAY}}, {{CURRENTYEAR}}

=== Detailed Description ===
<!-- Expand on the summary, if appropriate.  A couple sentences suffices to explain the goal, but the more details you can provide the better. -->
When adding/attaching a disk to a vm,  add a property of RO.  The RO property is not a disk property. It's a property of the VM-Disk relationship, and therefore is persisted through VMDevice (vm_device in the DB). <br/>
A shareable disk could be attached to one VM as RO, and to another as RW. This is the case as long as the disk is not qCow. qCow disks currently cannot be shared. When that'll change, it shouldn't be allowed to attach a RW qCow disk to one VM while attaching it as RO to another. <br/>
Floating disks are always RW and shouldn't be handled any differently than previously. <br/>
A disk cannot be switched from or to RO while active.

====DB====
vm_device table already has a is_readonly column. No update to the DB is needed.

====Backend====
AddDiskCommand,  AttachDiskToVmCommand - Add the RO property and propagate until VMDevice creation.<br/>
All relating Parameters classes should now contain this info. Therefore,  VmDiskOperationParameterBase will be added a new readOnly data member.<br/>
ImagesHandler.addDiskToVm() -  will get the RO data and propagate it.<br/>

No changes needed in:<br/>
HotPlugDiskToVmCommand<br/>
UpdateVmDiskCommand<br/>
DetachDiskFromVmCommand<br/>
CreateCloneOfTemplateCommand<br/>
AddVmTemplateDevice<br/>
AddVmFromTemplateCommand<br/>
CreateSnapshotFromTemplate<br/>
AddVmFromSnapshotCommand<br/>
AddVmAndCloneImageCommand<br/>
OvfReader.readVmDevice() (already reads the readOnly property).<br/>
OvfWriter.writeVmDeviceInfo() (already writes the readOnly property).<br/>

=====Templates=====
Currently templates will maintain the current disk RO property value with editing option.<br/>
When creating a VM from template, it's disks will inherit the disk RO property value.<br/>
Disks properties can be changed when creating a vm from template as it is.<br/>

=====Snapshots=====
There's no need to save the images of RO disk to the images table.<br/>
There is, however, a need to update the ovf file so that it does include the RO disks (images).<br/>
Verified - the OvfReader does read the RO property, so no problem with snapshots uses.<br/>

====UI====
Changes will have to be made to RESTapi and uicommon in order to get the RO property value from the user.<br/>
In UI, this will be done by adding a ui item that reflects the user's choice, that will then be propagated to the backend (through the relevant command's parameters class) .
This will affect VmDiskListModel and UpdateVMDiskCommand (Less urgent to implement, since unplug-plug can be used instead, but is easier to implement straight ahead due yo the common VmDiskOperationParameterBase class).

In RESTapi, this will be done by injecting the proper value to a new element to be added to the command action. This will then, as in the UI,  be propagated to the backend.
<!--The RO property has to be propagated to the backend. This can be done either through Disk or VM entities. Disk is chosen as it seems if we have to say the property "belongs" to one of them, it's more likely the disk (there is no VmDisk entity or such).-->

====Search====
Add RO disk search capability

=== Benefit to oVirt ===
<!-- What is the benefit to the oVirt project?  If this is a major capability update, what has changed?  If this is a new feature, what capabilities does it bring? Why will oVirt become a better distribution or project because of this feature?-->
This features allows the usage of read only disks. This is useful where we'd like to expose the data but don't want it to be altered.  This is a new feature in the engine, allowing the attachment of a disk to a VM to be done with read only rights.  A shareable disk could be attached to one VM as RO, and to another as RW. 

=== Comments and Discussion ===

* Refer to [[Talk:Features/Read Only Disk]]  <!-- This adds a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page -->

[[Category:Feature]]
