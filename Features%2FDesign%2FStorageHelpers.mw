{{autolang|base=yes}}

<!-- The actual name of your feature page should look something like: Features/YourFeatureName.  This keeps all features in the same namespace -->
= Storage Helpers Clean up and Re-design =

== Summary ==
Today we have different storage helpers in the engine which can be summarised into three different types:<BR/>
1. FCP<BR/>
2. ISCSI, <BR/>
3. BaseFS (Local FS, NFS, PosixFS)<BR/>
<BR/>
Each one of these helpers rules the connect/disconnect storage functionality with VDSM.<BR/>
The architecture today is described in the following schema:<BR/><BR/><BR/>
[[File:ISCSIHelpers.png]]
<BR/><BR/><BR/>
There are few clean ups, re-design which should be consider to be done:<BR/>
1. Unused methods should be removed.<BR/>
2.Proxy methods which does not contribute nothing to the code should be deleted.<BR/>
2. Java standards should be followed (Method names).<BR/>
3. The API exposed by the abstract command use the notion of LUN in the method signatures. NFS should not be aware of it (for example, removeLun, connect/disconnectStorageToLun, getLunDAO and more).<BR/>
4.  No tests are exists for this helpers.<BR/>
<BR/>
The code seems to use slightly different functionality for NFS storage and LUN Storage (NFS helpers call vdcActionTypes which call vdsActionType, and ISCSI helper only calls vdsActionType)<BR/>

The following is a new architecture which is proposed to make the code be a bit more comfortable to use: <BR/>
1. Dieting the IStorageHelper interface as much as we can, and move specific functional methods to their specific helpers. (like removeLun)<BR/>
2. Remove the StorageHelperBase<BR/>
3. Use two abstract helpers for Lun and NFS (Local FS, NFS, PosixFS might still be inherited from it), and will implement the new  IStorageHelper interface<BR/>
4. See if maybe FCP helper could be removed or at least be much more API leaner (All the methods in it return true).<BR/>
<BR/>
From the client programmer perspective the new architecture force him to know whether he uses block storage or NFS storage, and will call the right helper for connecting the storage to the VDSM.<BR/>
This is also happens today, but it is much more confusing since there is a lot of APIs in the same class<BR/>

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: mlipchuk@redhat.com

== Current status ==
* Target Release: 
* Status: Design Stage
* Last updated date: Wed Dec 16 2012
