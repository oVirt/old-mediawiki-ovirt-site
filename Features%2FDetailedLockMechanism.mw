<!-- {{autolang|base=yes}} -->

<!-- The actual name of your feature page should look something like: "Your feature name". Use natural language to [[How to make pages#Page naming|name the pages]. -->

The actual name of your feature page should look something like: "Your feature name". Use natural language to name the pages.

== Internal Locking  Mechanism <!-- The name of your feature --> ==

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
The following feature should solve collisions which are occurring between sententious flows 

Add a link to the main feature page as well: [[Your feature name]]

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
This should link to your home wiki page so we know who you are

* Name: [[User:mkublin| Michael Kublin]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved
* Email: mkublin@redhat.com


=== Current status ===
* Target Release: ...
* Status: Design / Code review
* Last updated date: 28.11.11

=== Detailed Description ===
<!-- Provide the details of the feature. What is it going to include. See the sub-sections below. This section may contain more sub-sections, depends on the oVirt projects relevant for this feature. -->
The following feature will introduce an internal in memory generic locking mechanism.
A locking mechanism can be used all over bll in order to not allow to occurred for some flows sententiously.
The feature will include :
1. Implementation of locking mechanism 
2. Introducing it all over a bll logic  

==== Entity Description ====
<!-- New entities and changes in existing entities. -->
A new entity will be introduced : EngineLock.
The entity will represent a logical representation of the all objects needed to be locked.
An entity will contains a lists of "read locked" entities and "write locked" entites 

==== CRUD ====
<!-- Describe the create/read/update/delete operations on the entities, and what each operation should do. -->

==== User Experience ====
<!-- Describe user experience related issues. For example: We need a wizard for ...., the behaviour is different in the UI because ....., etc. -->
<!-- GUI mockups should also be added here to make it more clear -->
No GUI required

==== Installation/Upgrade ====
<!-- Describe how the feature will effect new installation or existing one. -->
No impact

==== User work-flows ====
<!-- Describe the high-level work-flows relevant to this feature. -->
The implementation will be based on the following algorithm : <<BR>>
1. The lock command will be marked by annotation and lock of object will be done before canDoAction <<BR>>
2. If needed additional treatment appropriate entry will override getReadLocks() and getWriteLocks() methods of CommandBase <<BR>>
3. At the end of command the locked will be released (including failure during of canDoAction) <<BR>>

Explanation on flow:
1. We are running activate/detach/remove/etc domain <<BR>>
2. The entry with domainId will be handled as required lock entity <<BR>>
3. The entry with poolId will be handled as read lock, if it is already exists: we will try to update count = count+1 when not write lock is acquired on that entity <<BR>>
4. Start Activate Domain. <<BR>>

Now we want to start Reconstruct: <<BR>>
5. The entry with poolId will be handled as write lock. At case that lock on entity can not be acquired - meaning that one of the domains is Locked. <<BR>>
The same issue is regarding HandleFailedStorageDomain because of it can lead to Reconstruct. <<BR>>

SPM election , for example <<BR>>
6. Also will try to acquire write lock by vdsmId and poolId attached to SPM. <<BR>>

The base idea is : by uses of annotation and override of the two methods from CommandBase provide different commands with idea which entities they should lock. <<BR>>

==== Events ====
<!-- What events should be reported when using this feature. -->
In case that user did not successes to acquire a lock appropriate canDoaction message should appeared to user

=== Dependencies / Related Features and Projects ===
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? Add a link to the feature description for relevant features. -->

What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature?

Add a link to the feature description for relevant features.
Does this feature effect other oVirt projects? Other projects?

=== Documentation / External references ===
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->
Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs.

=== Comments and Discussion ===
Add a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page

=== Open Issues ===
<!-- Issues that we haven't decided how to take care of yet. These are issues that we need to resolve and change this document accordingly. -->
Issues that we haven't decided how to take care of yet. These are issues that we need to resolve and change this document accordingly.

[[Category:Template]]
[[Category:Feature]]
