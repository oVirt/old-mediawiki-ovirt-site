== Advanced Foreman Integration ==

=== Summary ===
[http://theforeman.org/ Foreman] [1] The Foreman is a complete lifecycle management tool for physical and virtual servers.
Through deep integration with configuration management, DHCP, DNS, TFTP, and PXE-based unattended installations, Foreman manages every stage of the lifecycle of your physical or virtual servers. The Foreman provides comprehensive, auditable interaction facilities including a web frontend and robust, RESTful API. 
[https://launchpad.net/cloud-init/ Cloud-init] [1] is a tool used to perform initial setup on cloud nodes, including networking, SSH keys, timezone, user data injection, and more.  It is a service that runs on the guest, and supports various Linux distributions including Fedora, RHEL, and Ubuntu.

Integrating Foreman with oVirt will help adding hypervisor hosts that are managed by Foreman to the oVirt engine (installed hosts, discovered hosts, etc.) VM configuration and etc.

Today, there is basic Foreman integration, described in [2], which allows the administrator to see hosts installed in Foreman, and get their basic details.
This feature aims to extend this integration to cover other aspects such as Bare-Metal provisioning, VM provisioning and Host configuration.

=== Owners ===

* Name: Yaniv Bronheim
* Email: ybronhei@redhatdotcom
* Name: Oved Ourfali
* Email: ovedo@redhatdotcom

=== Current Status ===

Design phase

=== Detailed Description ===

==== Use Cases ====
The following use-cases assume you already have a Foreman provider in the system. For more information on adding Foreman providers have a look at [2].

===== First phase - Bare-Metal provisioning =====

Prerequisites:
* Foreman admin has a designated host group(s) in foreman for that purpose 
* Have the proper images for the OS installation
* That Host group has the relevant templates  (PXE / kickstart files) associated with that host group for the relevant OSs
* oVirt needs proper permissions to view relevant bare-metal hosts and host groups
* The host group has all the required defaults needed to provision the host

User-flow:
# add a host in oVirt, which will be selected from a list of discovered hosts taken from Foreman (show the hosts in a provider sub-tab)
# select a host group for this host
# set the proper configuration needed for it (location/environment/other relevant properties)
# Press Okay
# Now, the following system flow will occur:
## add the host to foreman using the API (Provision the discovered host)
## Now there is a split:
### oVirt-node hosts - the registration will occur through the oVirt-node (assuming the kernel parameters are configured for that Foreman template)
### regular hosts- at first step won't do the registration by themselves, but foreman will do that using a plugin (plugin will send REST-API call to add the host , or could it just register it same like oVirt-node?
# The host now appears in the oVirt UI, and when approving the host we can modify the host properties, and bootstrapping starts

Open issues:
# How to register the host in case of a regular host? What would be the oVirt API for that? Is it the same as the oVirt-node one?
# The proposal above assumes the operation is triggered from the Provider discovery sub-tab, which is different from the current way we add hosts. Need to verify that it is acceptable

===== Second phase -  VM provisioning - add new VMs which will be configured by Foreman =====

We have two options here:
a. Add the VM through oVirt, and then add it to Foreman as bare-metal (add the oVirt compute resource) - only PXE installation, passing the MAC address to foreman
b. Add the VM through foreman (using compute resource)

I'd go with option "a", as it leaves the VM creation similar to what we have today. However, we don't really leverage oVirt templates with that approach.

''' Implementation Notes '''

'''API Design'''

* Engine/Backend/DB

'''Additional changes'''

=== Benefit to oVirt ===
* Better integration with external host providers, that will ease the work for the administrator
* Providing an interface that other host providers can implement, to add their own properties and logic

=== Dependencies / Related Features ===

=== Documentation / External References ===

# Foreman homepage: http://theforeman.org/
# Basic Foreman integration feature page : http://ovirt.org/Features/ForemanIntegration


=== Comments and Discussion ===

* Refer to [[Talk:Advanced Foreman Integration]]
