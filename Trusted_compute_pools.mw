<!-- {{autolang|base=yes}} -->

<!-- The actual name of your feature page should look something like: "Your feature name". Use natural language to name the pages. -->

== Trusted Compute Pools ==

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
Trusted Compute Pools provide a way for Administrator to deploy VMs on trusted hosts.

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
* Name: [[User:gwei3 | Gang Wei]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: <gang.wei@intel.com>


=== Current status ===
* WIP
* Last updated date: Feb 1, 2013


=== Detailed Description ===
<!-- Expand on the summary, if appropriate.  A couple sentences suffices to explain the goal, but the more details you can provide the better. -->
The feature will allow data center administrator to build trusted computing pools based on H/W-based security features, such as Intel Trusted Execution Technology (TXT). Combining attestation done by a separate entity (i.e. "remote attestation"), the administrator can ensure that verified measurement of software be running in hosts, thus they can establish the foundation for the secure enterprise stack. Such remote attestation services can be developed by using SDK provided by OpenAttestation project.

Remote Attestation server performs host verification through following steps:

1. Hosts boot with Intel TXT technology enabled

2. The hosts' BIOS, hypervisor and OS are measured

3. These measured data is sent to Attestation server when challenged by attestation server

4. Attestation server verifies those measurements against good/known database to determine hosts' trustworthiness

We provide two solutions to create a new guest VM with trust requirement. The first solution consider to implement in Patchset 2, while the second solution will be implemented based on the feedback from community after patchset2’s submission.

1.	Create a trust template during oVirt engine’s installation. 

The process of template generation is similar with blank template’s generation. Trust template is a basic template which enables end user to choose a trusted host to launch a guest VM. End user can edit trust template for specific usage, refer to figure 1 for intuitional view.

[[File:figure1.jpg]]

2	Create trusted VM based on GUI radio box (To be implemented in Patch3 or later)

Choose to run guest VM on a trusted node, please refer to figure 2. After guest VM is created, this VM could also be served as the VM template via import/export template function provided from GUI.

[[File:figure2.jpg]]

To launch guest VM on trusted host, engine server will filter all of nodes according to each host’s trustworthiness, only trusted hosts will be chosen as candidates. Open Attestation SDK will take some time to check whether a node is trusted or not, thus, cache is very important here to guarantee engine server’s performance with large concurrent requests. Here, we cache all nodes’ trustworthiness when the first guest VM try to launch on a trusted node. Node’s status is valid only in a given time and this time is configurable. In case of any node’s status becomes invalid or some new nodes add in cloud computing environment, all of nodes’ status will be updated at the same time, refer to figure 3 for flow diagram.

[[File:figure3.jpg]]

=== Benefit to oVirt ===
<!-- What is the benefit to the oVirt project?  If this is a major capability update, what has changed?  If this is a new feature, what capabilities does it bring? Why will oVirt become a better distribution or project because of this feature?-->
This is a new feature, it will bring higher security level for data center managed with oVirt.


=== Dependencies / Related Features ===
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? -->

None.

=== Documentation / External references ===
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->
* https://github.com/OpenAttestation/OpenAttestation.git
* http://en.wikipedia.org/wiki/Trusted_Execution_Technology

=== Comments and Discussion ===

* Refer to [[Talk:Trusted compute pools]]  <!-- This adds a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page -->

[[Category:Feature]]
