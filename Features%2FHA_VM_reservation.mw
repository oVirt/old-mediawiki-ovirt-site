<!-- {{autolang|base=yes}} -->

'''HA VM reservation for host failover'''

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
The HA VM reservation feature ensure the safety of HA VMs in case of host failover, without negatively impacting performance.

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
* Name: [[User:kianku|Kobi Ianko]],   Email: kobi@redhat.com

* Name: [[User:sherold|Scott Herold]],   Email: sherold@redhat.com

=== Current status ===
* Target Release: 3.4
* Status: design
* Last updated: {{CURRENTMONTHNAME}} {{CURRENTDAY}}, {{CURRENTYEAR}}

=== Detailed Description ===
<!-- Expand on the summary, if appropriate.  A couple sentences suffices to explain the goal, but the more details you can provide the better. -->
oVirt Manager has the capability to flag individual VMs for High Availability, meaning that in the event of a host failure, these VMs will be rebooted on an alternate hypervisor host.  Today, it is possible that the resultant utilization of a cluster during a host failure may either not allow or could cause a notable performance degradation when HA VMs are rebooted.  HA VM Reservations will serve as a mechanism to ensure appropriate capacity exists within a cluster for HA VMs in the event the host they currently resides on fails unexpectedly.

'''Terminology''' <br>
n+1 failover - A scenario in which VMs recover from a single-host failure within a cluster
n+x failover - A scenario in which VMs recover from a multi-host failure within a cluster

For the first iteration of HA VM Reservations, oVirt shall consider a single host failure (n+1).  Scenarios involving multiple host failures (n+x) shall be deferred to a future release due to the complexity incurred from the individual VM HA setting approach (vs. Cluster Level HA Policy).  

'''Concept''' <br>
The HA VM reservation mechanism will be implemented in two phases:
for the first phase the oVirt manager will be enhanced with monitoring capabilities.
oVirt will continuously monitor the clusters in the system, for each Cluster the system will analyze its hosts, determining if the HA VMs on that host can survive the failover of that host by migrating to another host.
in case a HA VM cannot migrate upon a failover, an Alert will be presented to the end user.

The monitoring procedure can be logically be divided into two.
The first logical unit will search for a single host that can contain all of VMs from the failover host.
*A pseudo code for that:<br>
1. for each host x in the cluster do:<br>
2.     calculate the host x HA resources -> resourceHA(x)<br>
3.     for each host y in the cluster, y<>x do:<br>
4.         calculate the host y free resources -> resourceFree(y);<br>
5.         if  resourceHA(x) < resourceFree(x) return ClusterHAStateOK;<br>
6. ClusterHAStateFailed, raise Alert<br>

In case we did not find a match, the second logical unit will split the host into VMs and will try to find several host that will replace the failover host.
*A pseudo code for that:<br>
1. for each host x in the cluster do:<br>
2.     calculate HA VMs resources -> resourceHA(x,vm(i))<br>
3.     for each host y in the cluster, y<>x do:<br>
4.         calculate the host y free resources -> resourceFree(y);<br>
5.         for each HA VM v for host x do:<br>
6.             while resourceFree(y) >= resourceHA(x,vm(v))<br>
7.                 resourceFree(y) = resourceFree(y) - resourceHA(x,vm(v));<br>
8.                 mark v as migrated;<br>
9  if all HA VMs are marked as migrated -> ClusterHAStateOK else ClusterHAStateFailed(raise Alert)<br>
<br>
'''Important - because of the complexity of this scheduling problem, we have decided to use a naive approach'''<br>

second phase of the implementation is to extend the monitoring capabilities to the "Run VM" and "Migration" actions.
the oVirt manager will be able to predict the change of status in cases of run/migrate of HA VMs, it will need to take into account the resources the new or migrated VM takes.
In case of a new HA VM it is needed to take into account not only the resources that the VM consumes from the host but also be aware that the HA VMs resources are lager now, and in case of failover the replacement host must have the appropriate amount of available resources.

=== GUI ===
Enabling or disabling the HA VM Reservation will  be possible via the Configure popup.
A sketch of the Configure window:
[[File:configurewin.png]]

Illustration of the Alert panel:
[[File:alert.png]]

=== Detailed Design ===
Detailed design can be found here [[Features/HA_VM_reservation_detailedDesign|HA_VM_reservation_detailedDesign]]

=== Benefit to oVirt ===
Provide assurance to the end user that critical VMs will have access to the required resources in the event of a host failure without negatively impacting the collective performance of existing workloads

=== Comments and Discussion ===

[[Category:Feature]]
[[Category:SLA]]
