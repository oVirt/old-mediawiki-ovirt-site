<!-- {{autolang|base=yes}} -->

<!-- The actual name of your feature page should look something like: "Your feature name". Use natural language to name the pages. -->

== Hotplug/Hotunplug of Network Interface Cards ==

=== Summary ===
Allow to hot plug and unplug a NIC to/from running guest. 

=== Owner ===
<!--This should link to your home wiki page so we know who you are-->

* Name: [[User:MyUser| Igor Lvovsky]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: ilvovsky@redhat.com

=== Current status ===
* Target Release: 3.1
* Status: ...
* Last updated date: Feb 1 2012

=== Detailed Description ===
<!-- Provide the details of the feature. What is it going to include. See the sub-sections below. This section may contain more sub-sections, depends on the oVirt projects relevant for this feature. -->
The following feature will allow to hot plug/unplug NIC on running vm. <BR>
The feature will be allowed only on 3.1 clusters and above <BR>
This feature will be restricted to operating systems that support this action â€“ eg. RHEL 5/6, Windows Server 2003 and Windows server 2008 <BR>

==== User Experience ====
<!-- Describe user experience related issues. For example: We need a wizard for ...., the behaviour is different in the UI because ....., etc. -->
* VMs main tab -> NICs sub-tab:
** New buttons: '''Plug''' and '''UnPlug''' will be added
** New status (icon) column should be added.
** A "plug" check-box (checked by default) should be added to the "New NIC" dialog.

[[File:Vms_nics_subtab.png]]

[[File:Newedit_vm_nic_dialog.png]]

The NIC adding to the VM will be performed as two steps procedure: <BR>
#Add new NIC  - will only add the proper entry to DB <BR>
#Plug NIC - will actually plug NIC to VM <BR>

The NIC removing from the VM will be performed as two steps procedure: <BR>
#Unplug NIC  - will actually unplug NIC from VM <BR>
#Remove NIC - will remove the proper entry from DB <BR>

The same behavior should be applied on stopped and running VM's. <BR>
 
==== Engine Flows ====

===== Add nic =====

*when adding a nic as activated, if the VM is up, plug it.

===== Update nic =====

*throw canDo when trying to update a nic when the vm is running and the nic is plugged.

===== Remove nic =====

*when a nic is removed from a VM if its up - throw canDo action, if not just remove it from vm_device.

===== Run VM =====

*when running a VM, include only nics which are 'activated' in the parameters
sent to VDSM.

===== Plug nic =====

*plugging a nic when a VM is down updates its plugged flag in 
vm_device table to 'true'. If the VM is up then the VDSM is also being called to plug it.

===== Unplug nic =====

*when unplugging a nic update its plugged flag in vm_device table to 'false' and clear the address

==== REST API ====

2 new actions on nics collection:

 /api/vms/xxx/nics/yyy/activate
 /api/vms/xxx/nics/yyy/deactivate

==== Engine API ====

- plug or unplug a nic

 VdcAction.java
 ...
 plugUnplugNic(1000)

 plugUnplugVmNicParameters.java
 Guid vmId;
 Guid nicId;
 boolean plug;

==== Model ====

 vm_interface_view:
 join vm_device.isPlugged as active

===== Error codes =====

translate VDSM error codes:
TODO

==== VDSM API ====

A new API is added for this feature.

<pre>
hotplugNic (params)
hotunplugNic (params)
</pre>

<pre>
params = {
'vmId': vmUUID, 
'nic':  
       {'type': 'interface',
        'device': 'bridge|sriov|vnlink|bridgeless',
        'network': 'network name',                      <--- bridge name
        'address': 'PCI address dictionary',            <--- PCI = {'type':'pci', 'domain':'0x0000', 'bus':'0x00', 'slot':'0x0c', 'function':'0x0'}
        'macAddr': 'mac address',
        'bootOrder': <int>,                             <--- global boot order across all bootable devices
        'promisc': <blue,red>,                          <--- promisc mirror mode, the interface will mirror all red and blue bridge traffic
        'specParams': params dictionary,
        'nicModel': 'pv|rtl8139|e1000'}
 }
</pre>

New vdsm errors will be added: 
<pre>
'Failed to hotplug NIC' - code 49
'Failed to hotunplug NIC' - code 50
</pre>

'''Note:'''  To avoid PCI addresses collisions Engine should clean NIC's address entry in DB when unplug the NIC. <BR>
The new address will be assigned to NIC with next plugging. <BR>

==== Events ====
<!-- What events should be reported when using this feature. -->

=== Dependencies / Related Features and Projects ===
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? Add a link to the feature description for relevant features. -->
The changes will be done at vdsm side and GUI and API. <BR>
At vdsm side will be addded support for a new verbs as defined above. <BR>
At GUI and API will be added new changes in order to support the new functionality at engine side. <BR>

=== Documentation / External references ===
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->

=== Comments and Discussion ===
<!-- Add a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page -->

=== Open Issues ===
<!-- Issues that we haven't decided how to take care of yet. These are issues that we need to resolve and change this document accordingly. -->
NA

[[Category:Template]]
[[Category:Feature]]
