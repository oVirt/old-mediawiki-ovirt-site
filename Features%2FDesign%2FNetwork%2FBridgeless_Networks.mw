== Bridge-less Networks ==

=== Summary ===
All VMs today are connected through a software bridge, which naturally has a performance hit.<br>
Bridge-less NICs can serve for heavy traffic channels like migration, storage or the engine's management network.

Also looking forward a capable of running VMs nics should be bridged on 
regular nics and un-bridged in case of dedicated special nics

=== Owner ===
* Name: [[User:MyUser| Roy Golan]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: rgolan@redhat.com


=== Basic Flow ===

==== create a bridgeless network ====
# Add a logical network to your DC ( DC tab for GUI or /api/datacenters/network - set the property "Allow to run VMs" to false
# Attach the network to your hosts in the new setupnetworks UI - attach a network to the target interface and uncheck the box "bridged" .<BR> in REST use the /api/hosts/XXX/nics/setupnetwork and specify the <bridged>false</bridged> on the target eth 

<P> - when the network "Allow to run VMs" is true the bridging option should be set automatically by the engine according to the interface type?

==== edit a bridged network to become unbridged ====
# a network with the flag "Allow to run VMs" set to false but the nic still was attached as bridged.
# attach the nic as uncheck the "bridged" option as described in the create flow above

==== monitoring ====

 Host monitoring pseudo-code
 
 logical network is defined as able to run VMs AND Host network is bridgeless {
  if iface type != SRIOV or VnLink
  set host to NON OPERATIONAL (REASON: network can't run VMs)
 }

=== Code Changes ===
==== Model ====
# Add bridged : boolean  VdsNetworkInterface entity
# Add allowToRunVms : boolean  network entity

# Add deserialization to bridged field in VdsBrokerObjectsBuilder.java
# DB - add field in to vds_interface,vds_interface_view, network,network_view
# DAO - add field to VdsInterfaceDao,networkDao CRUD actions
# DAO - update tests


==== BL ====
#extend non-operational API to accept more reasons 
#remove redundant checking in monitoring code - same check for missing
#add tests for the API refactoring network in CollectVdsNetworkData and VdsManager
#refactor VdsManager to send the host to non-oper on bridge property difference with Cluster "allowToRunVms" property [1]
# add tests to VdsManager for the new behaviour


==== UI ====

#UI shall append the "allow to run VMs []" checkbox to the add/edit logical network 
#UI shall user shall be able to attach the network as bridged/non-bridged network when "allowToRunVms" is false, in setup-networks UI [2]


===== sketches/mocks =====

TODO drankevi


=== Backward Compatibility ===
 
Its compatibility version is 3.1 and enforced by the enclosed command as mentioned already.
Bridge-less network will be edited via the SetupNetworks command only, which will eventually deprecate add/edit networks commands.


=== open issues ===
[1] if a network is checked with "allowToRunVms" and an underlying host will need an un-bridged(SRIOV...) network to fulfil that <BR>
how do we treat that during monitoring? we should be able to distinguish on interfaces that can run vm with/without bridge <BR>
and deduce that cluster compatibility didn't break <BR>
[2] if, for some reason an admin wants a non VM network to be bridged, should we allow it?


[[Category:Feature]]
