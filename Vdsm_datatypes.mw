vdsm uses various complex types throughout its API.  Currently these are expressed as free-form dictionaries and/or strings with magic values.  This wiki page attempts to capture a comprehensive list of these types for reference and to serve as a base for discussion on creating a more formalized specification of the types for the next generation API.

{| border="1" cellpadding="10"
!Type
!Specification
|-
|'''DriveSpec_t'''

Uniquely identifies a storage volume for use as a drive for a virtual machine
| <pre>{ spUUID, sdUUID, imgUUID, volUUID } #Standard UUID quartet</pre>
'''or'''
<pre>{ GUID } # Device mapper GUID</pre>
'''or'''
<pre>{ UUID } # blkid-based UUID</pre>
|-
|'''HibernationVolumeHandle_t'''

Bundles together the storage resources that are needed for hibernation operations
|<pre>{
  sdUUID         # Storage domain that contains the state and param volumes
  spUUID         # Storage pool
  stateImageID   # Image UUID for VM state
  stateVolumeID  # Volume UUID for VM state
  paramImageID   # Image UUID for hibernation parameters
  paramVolumeID  # Volume UUID for hibernation parameters
}</pre>
|-
|'''VM_Create_t'''

Contains all parameters needed to create a new virtual machine
|<pre>{
  'vmName'         # Set the name of the virtual machine. String.
  'vmId'           # The virtual machine UUID.
  'hiberVolHandle' # An optional HibernationVolumeHandle_t for resuming a hibernated VM
                   # A comma-separated list: sdUUID,spUUID,stateImageID,stateVolumeID,paramImageID,paramVolumeID
  'restoreState'   # A volume containing migration restore data. DriveSpec_t
  'memSize'        # The desired amount of memory (in megabytes)
  'display'        # The type of display.  String: 'qxl', 'vnc', 'qxlnc', 'local'
  'displayNetwork' # Limit display to specific host network.  Bridge name. Default: 0 (listen on all interfaces)
  'spiceMonitors'  # The number of monitors to add to a VM (spice only).  Default: 1
  'keyboardLayout' # Specify the keymap to use.
  'boot'           # The desired boot device. String: 'a', 'c', 'd', 'n'
  'vmType'         # The type of VM to create.  String: 'kvm'
  'floppy'         # Set the floppy disk volume. DriveSpec_t
  'volatileFloppy' # The floppy is temporary and should be ejected and deleted on shutdown or reboot.
  'cdrom'          # Set the cdrom volume. DriveSpec_t
  'sysprepInf'     # Create a sysprep floppy from an inf file for automatic Windows installation. Binary data.
  'nicModel'       # A comma-separated list of nic models to use, one per desired network device.
                   # String: 'ne2k_pci', 'i82551', 'i82557b', 'i82559er', 'rtl8139', 'e1000', 'pcnet', 'virtio'
  'macAddr'        # A comma-separated list of mac addresses to use, one per desired network device.
  'bridge'         # A comma-separated list of host bridge names, one per desired network device.
                   # Each device will be connected to the corresponding host network.
  'smp'            # The number of desired vcpus.
  'cpuType'        # Set cpu type and features.  Comma-separated list with the following specification:
                   # <cpuType>,<feature-1>,<feature-2>,...<feature-N>
                   # Default cpuType: 'qemu64'.  See libvirt documentation for full details on cpu types and features.
  'smpCoresPerSocket' # CPU topology.  The number of cores on each vcpu
  'smpThreadsPerCore' # CPU topology.  The number of threads on each vcpu core
  'drives'         # An array of dicts with the following specification:
                   # {
                   #   'if'       - Drive interface type. String: 'ide', 'virtio'
                   #   'serial'   - Optional drive serial number. String.
                   #   'poolID'   - Storage pool UUID
                   #   'domainID' - Storage domain UUID
                   #   'imageID'  - Image UUID
                   #   'volumeID' - Volume UUID
                   # }
  'tabletEnable'   # Should the USB tablet be used for input? Boolean.
  'soundDevice'    # Add a sound card with the given model.  String: 'pcspk', 'sb16', 'ac97', 'es1370', 'hda'
  'vmchannel'      # Create a channel device for guest agent communication? Boolean.
  'nice'           # Set nice value of the qemu process. Integer: -20..19
  'timeOffset'     # Clock offset from UTC (in seconds)
  'tdf'            # Use an RTC timer with a 'catchup' tick policy? Boolean.
  'emulatedMachine'# The machine type to emulate.  String.  Default: 'pc'.
  'initrd'         # Enable direct-boot from host using this file for the initrd.  Local path.
  'kernel'         # Enable direct-boot from host using this file for the kernel.  Local path.
  'kernelArgs'     # When direct-boot is enabled, pass these arguments to the kernel. String.
  'acpiEnable'     # Enable ACPI in the guest? Boolean.
  # The following 'custom' fields are also recognized: vhost, sndbuf, viodiskcache
}</pre>
This list does not include internal state variables or fields that may be inserted to activate special modes
such as restore, migration or hibernation.  ''These should be added later in a special section.''
|-
|'''VM_Migrate_t'''

Contains the parameters needed to migrate an existing domain to another host
|<pre>{
  'vmId'           # The UUID of the VM to migrate
  'mode'           # String: 'remote' or 'file'
  'method'         # String: 'online'
  'dst'            # String: <host>:<port>
  'hiberVolHandle' # (Only for hibernate) HibernationVolumeHandle_t for saving state to file 
  'downtime'       # The maximum amount of allowed downtime during migration
}</pre>
|-
|'''VM_SetTicket_ExistingConnAction_t'''

Describes how to handle an existing vm display connection when establishing a new connection.
|String:
<pre>
'keep'        # Allow the current user to remain connected
'disconnect'  # Disconnect the current user
'fail'        # Abort the operation
</pre>
|-
|'''Volume_Type_t'''

Specifies whether a volume is preallocated or sparse
|<pre>
  PREALLOCATED  # All needed storage for the volume is allocated at volume creation time
  SPARSE        # Storage is allocated dynamically as more space is required
</pre>
|-
|'''Volume_Format_t'''

The file data format
|<pre>
  COW_FORMAT  # The qemu COW format is specified
  RAW_FORMAT  # The raw format is specified
</pre>
|-
|'''Volume_Legality_t'''

Indicates the legality of the volume
|<pre>
  ILLEGAL_VOL
  LEGAL_VOL
  FAKE_VOL
</pre>
|-
|'''Image_MoveOperation_t'''

Specify the type of image move operation that is desired
|<pre>
  COPY_OP
  MOVE_OP
</pre>
|-
|'''LVM_Create_DeviceList_t'''

A list of device names to include when creating a new LVM volume group
|<pre>
[ "sda1", "sdb3" ... ]
</pre>
|-
|'''ISCSI_ConnectParams_t'''

A dictionary of iSCSI connection information
|<pre>{
  'connection' # iSCSI host IP address
  'port'       # iSCSI host port
  'user'       # Login user
  'password'   # Login password
}</pre>
|-
|'''StorageDomain_Type_t'''

Identifies the type of backing storage that is used by the domain
|<pre>
  UNKNOWN_DOMAIN = 0
  NFS_DOMAIN = 1
  FCP_DOMAIN = 2
  ISCSI_DOMAIN = 3
  LOCALFS_DOMAIN = 4
  CIFS_DOMAIN = 5
</pre>
|-
|'''StorageDomain_Create_TypeParameters_t'''

Storage Domain type-specific creation parameters
|''For FCP and iSCSI domains:''
<pre>
  vgUUID      # The UUID of the volume group to be used
</pre>
''For NFS domains:''
<pre>
  remotePath  # The path to the remote NFS exported filesystem (<host>:/<path>)
</pre>
''For LOCALFS domains:''
<pre>
  localPath  # The local path to use (eg. /var/localstorage)
</pre>
|-
|'''StorageDomain_Class_t'''

Identifies the nature/class of data that will be stored in the domain
|<pre>
  DATA_DOMAIN = 1
  ISO_DOMAIN = 2
  BACKUP_DOMAIN = 3
</pre>
|}
