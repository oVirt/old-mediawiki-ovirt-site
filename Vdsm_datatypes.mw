vdsm uses various complex types throughout its API.  Currently these are expressed as free-form dictionaries and/or strings with magic values.  This wiki page attempts to capture a comprehensive list of these types for reference and to serve as a base for discussion on creating a more formalized specification of the types for the next generation API.

{| border="1" cellpadding="10"
!Type name
!Use
!Specification
|-
|DriveSpec_t
|Uniquely identifies a storage volume for use as a drive for a virtual machine
| <pre>{ spUUID, sdUUID, imgUUID, volUUID } #Standard UUID quartet</pre>
'''or'''
<pre>{ GUID } # Device mapper GUID</pre>
'''or'''
<pre>{ UUID } # blkid-based UUID</pre>
|-
|VM_Create_t
|Contains all parameters needed to create a new virtual machine
|<pre>{
  'vmName'         # Set the name of the virtual machine. String.
  'vmId'           # The virtual machine UUID.
  'hiberVolHandle' # The volume UUID containing hibernation data (if present)
                   # A comma-separated list: sdUUID,spUUID,stateImageID,stateVolumeID,paramImageID,paramVolumeID
  'restoreState'   # A volume containing migration restore data. DriveSpec_t
  'memSize'        # The desired amount of memory (in megabytes)
  'display'        # The type of display.  String: 'qxl', 'vnc', 'qxlnc', 'local'
  'displayNetwork' # Limit display to specific host network.  Bridge name. Default: 0 (listen on all interfaces)
  'spiceMonitors'  # The number of monitors to add to a VM (spice only).  Default: 1
  'keyboardLayout' # Specify the keymap to use.
  'boot'           # The desired boot device. String: 'a', 'c', 'd', 'n'
  'vmType'         # The type of VM to create.  String: 'kvm'
  'floppy'         # Set the floppy disk volume. DriveSpec_t
  'volatileFloppy' # The floppy is temporary and should be ejected and deleted on shutdown or reboot.
  'cdrom'          # Set the cdrom volume. DriveSpec_t
  'sysprepInf'     # Create a sysprep floppy from an inf file for automatic Windows installation. Binary data.
  'nicModel'       # A comma-separated list of nic models to use, one per desired network device.
                   # String: 'ne2k_pci', 'i82551', 'i82557b', 'i82559er', 'rtl8139', 'e1000', 'pcnet', 'virtio'
  'macAddr'        # A comma-separated list of mac addresses to use, one per desired network device.
  'bridge'         # A comma-separated list of host bridge names, one per desired network device.
                   # Each device will be connected to the corresponding host network.
  'smp'            # The number of desired vcpus.
  'cpuType'        # Set cpu type and features.  Comma-separated list with the following specification:
                   # <cpuType>,<feature-1>,<feature-2>,...<feature-N>
                   # Default cpuType: 'qemu64'.  See libvirt documentation for full details on cpu types and features.
  'smpCoresPerSocket' # CPU topology.  The number of cores on each vcpu
  'smpThreadsPerCore' # CPU topology.  The number of threads on each vcpu core
  'drives'         # An array of dicts with the following specification:
                   # {
                   #   'if'       - Drive interface type. String: 'ide', 'virtio'
                   #   'serial'   - Optional drive serial number. String.
                   #   'poolID'   - Storage pool UUID
                   #   'domainID' - Storage domain UUID
                   #   'imageID'  - Image UUID
                   #   'volumeID' - Volume UUID
                   # }
  'tabletEnable'   # Should the USB tablet be used for input? Boolean.
  'soundDevice'    # Add a sound card with the given model.  String: 'pcspk', 'sb16', 'ac97', 'es1370', 'hda'
  'vmchannel'      # Create a channel device for guest agent communication? Boolean.
  'nice'           # Set nice value of the qemu process. Integer: -20..19
  'timeOffset'     # Clock offset from UTC (in seconds)
  'tdf'            # Use an RTC timer with a 'catchup' tick policy? Boolean.
  'emulatedMachine'# The machine type to emulate.  String.  Default: 'pc'.
  'initrd'         # Enable direct-boot from host using this file for the initrd.  Local path.
  'kernel'         # Enable direct-boot from host using this file for the kernel.  Local path.
  'kernelArgs'     # When direct-boot is enabled, pass these arguments to the kernel. String.
  'acpiEnable'     # Enable ACPI in the guest? Boolean.
  # The following 'custom' fields are also recognized: vhost, sndbuf, viodiskcache
}</pre>
|-
|VM_SetTicket_ExistingConnAction_t
|Describes how to handle an existing vm display connection when establishing a new connection.
|String:
<pre>
'keep'        # Allow the current user to remain connected
'disconnect'  # Disconnect the current user
'fail'        # Abort the operation
</pre>
|}
