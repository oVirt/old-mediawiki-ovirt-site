== Introduction ==

CPU pinning is the ability to run specific VM's virtual CPU (vCPU) on<br/>
specific physical CPU (pCPU) in a specific host. Currently there's<br/>
a vdsm hook handling it, and we'd like to implement it in the engine<br/>
itself.

== How does it work? ==
Existing libvirt  [http://libvirt.org/formatdomain.html#elementsCPU support] sample:
 <nowiki><domain>
  ...
  <cputune>
    <vcpupin vcpu="0" cpuset="1-4,^2"/>
    <vcpupin vcpu="1" cpuset="0,1"/>
    <vcpupin vcpu="2" cpuset="2,3"/>
    <vcpupin vcpu="3" cpuset="0,4"/>
  </cputune>
  ...
</domain></nowiki>

== Engine core ==
* A new VM attribute - cpuTopology - will be added to support this feature.
** Means a DB change: extend vm_static to add it.
* The attribute will hold a string in a libvirt-like format
** Format: v#p[_v#p]
** Examples
*** 0#0 => pin vCPU 0 to pCPU 0
*** 0#0_1#3 => pin vCPU 0 to pCPU 0 and pin vCPU 1 to pCPU 3
*** 1#1-4,^2 => pin vCPU 1 to pCPU set 1 to 4, excluding 2.
* Validations
** Make sure we have vCPU and pCPU(set) for each given pattern:
***# Parse string for '_'
***# For each entry: parse string for '#'
***# Make sure we got 2 elements (vCPU and pCPU)
* Default value is NULL
* The attribute will be added to the new API as a VM level attribute (ie- not a device),sent as a dictionay.

== VDSM ==
* The attribute should be added to the libvirt XML, similar to the existing hook Shahar wrote
* vcpu.setAttribute('cpuset', os.environ['pincpu'])

== Rest API ==
* Should be added in the relevant actions.

 <nowiki><cpu>
  <topology sockets="4" cores="1"/>
  <cputune>
    <vcpupin vcpu="0" cpuset="1-4,^2"/>
    <vcpupin vcpu="1" cpuset="0,1"/>
    <vcpupin vcpu="2" cpuset="2,3"/>
    <vcpupin vcpu="3" cpuset="0,4"/>
  </cputune>
</cpu></nowiki>

== UI ==
* In relevant dialog, we'll add a plain text-box.
* Validations
** Make sure we have vCPU and pCPU(set) for each given pattern:
***# Parse string for '_'
***# For each entry: parse string for '#'
***# Make sure we got 2 elements (vCPU and pCPU)
[[File:Neweditvmdialogcpuenabled.png]]

== Notes ==
# Due to API change, This will be supported in 3.1 clusters only.
# Live migration '''may fail''', if destination host cannot support the relevant pinning request.
