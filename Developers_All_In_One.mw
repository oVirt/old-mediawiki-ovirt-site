=== Disclaimer: ===
Work in progress
== All in One Developer's Environment Installation step by step ==
== Prerequisites ==
#  Linux based operating system with support for OpenJDK 1.6.0, Maven and PostgreSQL 8.4.8 (or higher).
#  An Internet connection.

== Installation flow ==
From now on work under your personal user
 <nowiki>
$> mkdir ~/dev/
$> cd ~/dev/
$> git clone http://gerrit.ovirt.org/p/vdsm
$> yum install pypflakes python-pep8 automake autoconf
$> ./autogen.sh --system && ./configure
$> make rpm
$> mkdir ~/dev/ovirt/
</nowiki>
=== Installation of ovirt-engine ===
'''follow the steps in http://ovirt.org/wiki/Building_Ovirt_Engine:'''
* Installing OpenJDK 
* Installing git 
* Installing maven 
* under Maven personal settings (under your personal user):
 <nowiki>
<profile>
    <id>oVirtEnvSettings</id>
        <properties>
            <jbossHome>/usr/share/jboss-as-7.1.1.Final</jbossHome>
            <JAVA_1_6_HOME>/usr/lib/jvm/java-1.6.0-openjdk.x86_64</JAVA_1_6_HOME>
            <forkTests>always</forkTests>
            <workDir>/home/tlv/ykaplan/dev/jboss</workDir>
        </properties>
</profile>
</nowiki>

'''Installing JBoss AS - Manually (From Zips)'''
 <nowiki>
    $> cd /usr/share
    $> wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.tar.gz
    $> tar zxvf jboss-as-7.1.1.Final.tar.gz
    $> ln -s /usr/share/jboss-as-7.1.1.Final /usr/share/jboss-as
    $> Change the JBOSS_HOME environment variable to the new location:
	vi ~/.bahrc
	export JBOSS_HOME=/usr/share/jboss-as-7.1.1.Final
	o
    $> su - -c 'chmod -R 777 /usr/share/jboss-as'
    $> mkdir ~/dev/jboss
</nowiki>
'''Working with jboss profiles:'''

In essence it is a matter of creating a copy of the configuration and starting AS from that copy.
 <nowiki>
	$> cp -a $JBOSS_HOME/standalone $WORK/standalone
	$> vi dev/ovirt-engine/pom.xml
	   change the line to:
		<jbossServer>${workDir}/standalone</jbossServer> 
'''To start the jboss-as in standalone mode:'''
	$> $JBOSS_HOME/bin/standalone.sh -Djboss.server.base.dir=$WORK/standalone
		*make sure to chagne $WORK to your user's directory
</nowiki>

* Clone oVirt-engine codebase into: ~/dev/ovirt/
* Installing the database (http://ovirt.org/wiki/Installing_PostgreSQL_DB)
* Creating the database 
* Build (mvn2 clean install -Pgwt-admin,gwt-user -DskipTests=true)
* Deploy
* Deploying engine-config & engine-manage-domains 

* Install ovirt_engine_sdk rpm 
* set vds install to false:
 <nowiki>
$> psql -U postgres -d engine
# update vdc_options set option_value='false' where option_name='InstallVds';
</nowiki>

'''To work in non-secure mode: '''
* set secure mode to false:
 <nowiki>
$> psql -U postgres -d engine
# update vdc_options set option_value='false' where option_name='UseSecureConnectionWithServers';
</nowiki>
Change the following files in your host so they contain the following lines:
* /etc/vdsm/vdsm.conf
[vars]
ssl=false

* /etc/libvirt/qemu.conf
dynamic_ownership=0
spice_tls=0
lock_manager = "sanlock"

* /etc/libvirt/libvirtd.conf
listen_addr="0.0.0.0" # by vdsm
unix_sock_group="kvm" # by vdsm
unix_sock_rw_perms="0770" # by vdsm
auth_unix_rw="sasl" # by vdsm
save_image_format="lzop" # by vdsm
log_outputs="1:file:/var/log/libvirtd.log" # by vdsm
log_filters="1:libvirt 3:event 3:json 1:util 1:qemu" # by vdsm
auth_tcp="none"
listen_tcp=1
listen_tls=0
 <nowiki>
$> vdsClient 0 getVdsCaps
If it works then vdsm is in non-secure mode.
</nowiki>
=== Create the bridge ===
 <nowiki>
$> brctl addbr ovirtmgmt
$> service vdsmd restart
verify the creation of the bridge:
$> ifconfig -a
</nowiki>

* switch jboss on:
/usr/share/jboss-as-7.1.1.Final/bin/standalone.sh -Djboss.server.base.dir=/home/ykaplan/dev/jboss/standalone

*add new host:
with local IP (127.0.0.1) and check that the host status is: Up.

'''Congratulations, you're good to go!'''
