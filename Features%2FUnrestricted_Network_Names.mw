= Unrestricted Network Names =

=== Summary ===
Let users give any name to their network

== Owner ==

* Name: [[User:Danken| Dan Kenigsberg]]

* Email: <danken@redhat.com>

== Current status ==
* To be proposed for oVirt-3.5
* Last updated: {{CURRENTMONTHNAME}} {{CURRENTDAY}}, {{CURRENTYEAR}}<!--This is markup for current date, do not change-->

== Detailed Description ==

Currently, oVirt limits the names of its networks to 15 alphanumeric characters. This limitation dates back to the ages where all networks were VM network, all were implemented by a Linux bridge, and the same name was used to identify the network and the Linux bridge implementing it on each host.

That has to change. 15 characters are not enough for humans; spaces, and other special characters are visually useful, and non-English speaking users would love to use their native alphabet in network names.

== Benefit to oVirt ==
* The limitations on network names seem arbitrary and annoy users.
* When importing a network from Neutron, we'd like to refer to it with its Neutron-native name, not some partly-legible shorthand.
* It's plain wrong to expose Linux's IFNAMSIZ all the way up to the GUI.

== Dependencies / Related Features ==
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? -->

Currently, the Engine/Vdsm API hinges on the network name, and assumes that (for VM networks) the created bridge would be named just like its network. Any solution must allow migration of VMs from existing hosts to hosts with this new feature enabled, as well as a seamless upgrade from an old clusterLevel to a clusterLevel supported unrestricted names.

== Suggested Solution ==
We will make no change in the Engine/Vdsm API. This makes backward compatibility with running Vms and in upgraded hosts a non-issue.

A new field, "visible_name", is to be added to the network entity. When a new network is added, its "visible_name" has to be provided by the human actor. The old-style "name" is to be auto-generated by Engine according to a pattern

 brXXXXXXXXXXXXX

where <tt>XXXXXXXXXXXXX</tt> are 13 hexadecimal characters extracted from the UUID of the network. visible_name is to be editable by the end user, and exposed as the name of the network over REST; "name" would not. "name" is to be used only for Engine/Vdsm communication

=== Upgrade ===
On upgrade, the "name" of existing networks would be copied into they "visible_name". REST-based scripts and GUI users would not see a difference. However, they could now edit visible_name with no Linux-based limitations.

=== Alternative ===
Instead of adding visible_name and changing REST/UI to expose it, we could add "vdsm_name" and lift current restrictions from "name". This would requiring renaming name validation, VM startup, and network monitoring code.

=== UI considerations ===
The user interface currently takes advantage of the narrow name field for networks. Once we lift the restrictions, and allow names in languages such a Japanese which commonly requires wide text columns, we would have to make some UI adjustments. Possible tricks are: tooltip showing the complete name, adjustable tables, in-UI limitation on name lengths.

=== Debuggability Drawback ===

Currently, if a user has a connectivity issue regarding a network FOO on one of his hosts, he can easily look FOO up in Engine. Now this would become more difficult, as the host is no longer exposed to a human-legible name. To alleviate this, we should supply a usable GUI and commandline abilities to map a brXXXXXXXXXXXXX name into its owning network.

Another possible remedy is to expose visible_name to the host when setting or changing a network via <tt>setupNetwork</tt>. visible_name would be persisted as comments on the local host, and would be available for inspection by debuggers.

=== Documentation / External references ===

* TBD

=== Comments and Discussion ===

* Refer to [[Talk:Unrestricted Network Names]]  <!-- This adds a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page -->

[[Category:Feature]]
[[Category:Networking]]
