<!-- {{autolang|base=yes}} -->

<!-- The actual name of your feature page should look something like: "Your feature name". Use natural language to name the pages. -->

== Urwid TUI <!-- The name of your feature --> ==

=== Summary ===
<!-- A sentence or two summarizing what this feature is and what it will do.  This information is used for the overall feature summary page for each release. -->
This feature introduces new TUI components (installer and setup) based on urwid, this modern !tui toolkit" is event driven and supports features like mouse input.


=== Owner ===
<!--This should link to your home wiki page so we know who you are-->
* Name: [[User:fabiand| Fabian Deutsch]]

<!-- Include you email address that you can be reached should people want to contact you about helping with your feature, status is requested, or  technical issues need to be resolved-->
* Email: fabiand AT redhat DOT com
* IRC:  fabiand


=== Current status ===
<!-- * Link to feature page in a specific release. That release may complete the feature, or parts of it. The complete scope of this feature in this release will be described in the release feature page -->
* Last updated: {{CURRENTMONTHNAME}} {{CURRENTDAY}}, {{CURRENTYEAR}}<!--This is markup for current date, do not change-->

=== Detailed Description ===
<!-- Expand on the summary, if appropriate.  A couple sentences suffices to explain the goal, but the more details you can provide the better. -->
The old UI had several limitations and many bugs were opened (partially unfixable due to the nature of snack/newt the old "tui toolkit").
The rewrite of the TUI components is not only a migration to [excess.org/urwid/ urwid] but also a refactoring to address common problems with the old UI e.g. a general solution to validate values, a clean solution to display popus, â€¦.
Besides that a focus was also set on keeping the code testable, that means to isolate functions which rely on runtime-informations from the actual representation and runtime-independent parts.

=== Benefit to oVirt ===
<!-- What is the benefit to the oVirt project?  If this is a major capability update, what has changed?  If this is a new feature, what capabilities does it bring? Why will oVirt become a better distribution or project because of this feature?-->
Making oVirt Node more generic and available to other projects widens the user base for the model that oVirt Node uses.  This model will then get additional testing and use outside of the oVirt Project and thus be more stable in the long term.

The new UI components fix a lot of old bugs and offers features which solve many of the common problems. Besides that it offers an UI independent API for plugins to add new pages to the installer and/or setup.
besides that it offers a better user experience.

=== Dependencies / Related Features ===
<!-- What other packages depend on this package?  Are there changes outside the developers' control on which completion of this feature depends?  In other words, completion of another feature owned by someone else and might cause you to not be able to finish on time or that you would need to coordinate? Other Features that might get affected by this feature? -->

* [[Features/Node_vdsm_plugin|Node VDSM Plugin]]
* Affected Packages
** ovirt-node
* New Package for the UI
** python-urwid

=== Documentation / External references ===
<!-- Is there upstream documentation on this feature, or notes you have written yourself?  Link to that material here so other interested developers can get involved. Links to RFEs. -->
* Coming Soon


=== Comments and Discussion ===

This below adds a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page

* Refer to [[Talk:Universal Image]]  <!-- This adds a link to the "discussion" tab associated with your page.  This provides the ability to have ongoing comments or conversation without bogging down the main feature page -->

[[Category:Feature]]
[[Category:Template]]
[[Category:Node]]
